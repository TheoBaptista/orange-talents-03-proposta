#data source
spring.datasource.url=jdbc:h2:mem:desafio-proposta
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=pass
spring.datasource.initialization-mode=never

#Spring boot
logging.level.org.springframework.security=DEBUG
server.port=8081

#jpa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

#h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Feing
consulta.restricao.financeira=http://localhost:9999
servico.cartao=http://localhost:8888
feign.client.config.consultaRestricaoFinanceiraSolicitanteFeignClient.read-timeout=100
feign.client.config.consultaRestricaoFinanceiraSolicitanteFeignClient.connect-timeout=100

#Spring Actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=metrics,prometheus,health
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:development}

#Scheduled
tempo.inicial.consulta.cartao=15000
tempo.periodico.consulta.cartao=30000

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/orange-talents}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/orange-talents/protocol/openid-connect/certs}
spring.security.oauth2.resourceserver.jwt.jws-algorithm=ES256

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=propostas

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}


opentracing.spring.cloud.feign.enabled=false
spring.cloud.loadbalancer.ribbon.enabled=false